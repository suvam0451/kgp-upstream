
@import "../../mixins/params.scss";

// DEFAULTS
$fs-font-size: 18px;
// $font

// ---------------------------
// PARAMETERS (font breakpoints)

$p-font-sizes: (
  // font + line height
  null: (15px, 1.3),
  480px: (16px, 1.3),
  640px: (17px, 1.4),
  1024px: (19px, 1.45)
);

$searchresult-font-sizes: (
  // font + line height
  null: (13px, 1.3),
  480px: (14px, 1.3),
  640px: (15px, 1.4),
  1024px: (17px, 1.45)
);

$h1-font-sizes: (
  null: (
    $fontsize_h1 - 6,
    1.3
  ),
  480px: (
    $fontsize_h1 - 4,
    1.3
  ),
  640px: (
    $fontsize_h1 - 2,
    1.4
  ),
  1024px: (
    $fontsize_h1,
    1.45
  )
);

$h2-font-sizes: (
  null: $fontsize_h2 - 3,
  480px: $fontsize_h2 - 2,
  640px: $fontsize_h2 - 1,
  1024px: $fontsize_h2
);

$h3-font-sizes: (
  null: (
    20px,
    1.3
  ),
  480px: (
    23px,
    1.3
  ),
  640px: (
    25px,
    1.4
  ),
  1024px: (
    28px,
    1.45
  )
);

$h4-font-sizes: (
  null: 28px,
  480px: 31px,
  640px: 33px,
  1024px: 36px
);

$h5-font-sizes: (
  null: 28px,
  480px: 31px,
  640px: 33px,
  1024px: 36px
);

$h6-font-sizes: (
  null: (
    17px,
    1.3
  ),
  480px: (
    18px,
    1.3
  ),
  640px: (
    19px,
    1.4
  ),
  1024px: (
    20px,
    1.45
  )
);

$type-scale: (
  -1: 0.75rem,
  // small text
    0: 1rem,
  // body text
    1: 1.333rem,
  // large text
    2: 1.777rem // main heading
);

$breakpoints: (
  small: 480px,
  medium: 640px,
  large: 1024px
);

// ------------------------------------

@mixin font-size($fs-map, $fs-breakpoints: $breakpoints) {
  @each $fs-breakpoint, $fs-font-size in $fs-map {
    @if $fs-breakpoint == null {
      @include make-font-size($fs-font-size);
      // font-size: $fs-font-size;
    } @else {
      // If $fs-font-size is a key that exists in
      // $fs-breakpoints, use the value
      @if map-has-key($fs-breakpoints, $fs-breakpoint) {
        $fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
      }
      // Apply whatever was obtained
      @media screen and (min-width: $fs-breakpoint) {
        @include make-font-size($fs-font-size);
        // font-size: $fs-font-size;
      }
    }
  }
}

// Utility for mixin font-size
@mixin make-font-size($fs-font-size) {
  // If $fs-font-size is a list, include
  // both font-size and line-height
  @if type-of($fs-font-size) == 'list' {
    font-size: nth($fs-font-size, 1);
    @if (length($fs-font-size) > 1) {
      line-height: nth($fs-font-size, 2);
    }
  } @else {
    font-size: $fs-font-size;
  }
}

// ---------------------------------------------
// IMPLEMENTATION

a,
p,
ul,
ol {
  @include font-size($p-font-sizes);
  font-family: Fira Sans, Arial, Helvetica, sans-serif;
}

p.search_results {
  @include font-size($searchresult-font-sizes);
  font-family: Fira Sans, Arial, Helvetica, sans-serif;
}

h1 {
  @include font-size($h1-font-sizes);
  font-family: Arial, Helvetica, sans-serif;
  margin-top: 2rem;
  margin-bottom: 0.8rem;
  font-weight: 700;
}

h2 {
  @include font-size($h2-font-sizes);
  font-family: Arial, Helvetica, sans-serif;
  margin-top: 2rem;
  margin-bottom: 0.75rem;
  font-weight: 700;
}

h3 {
  @include font-size($h3-font-sizes);
  font-family: Arial, Helvetica, sans-serif;
  margin-top: 1.5rem;
  margin-bottom: 0.8rem;
  font-weight: 700;
}

h4 {
  @include font-size($h4-font-sizes);
  font-family: Arial, Helvetica, sans-serif;
  font-weight: 700;
}

h5 {
  @include font-size($h5-font-sizes);
  font-family: Arial, Helvetica, sans-serif;
  font-weight: 700;
}

h6 {
  @include font-size($h6-font-sizes);
  font-family: Arial, Helvetica, sans-serif;
  margin-top: 1rem;
  margin-bottom: 1rem;
  font-weight: 700;
}

i.lowemphasis {
  font-weight: 300;
  color: grey;
}

